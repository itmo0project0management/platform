upstream odoo {
  server 127.0.0.1:8069;
}

server {
  listen 80;
  server_name 1367775-cn23133.tw1.ru;

  # Redirect non-www to www
  if ($host !~* ^www\.(.*)) {
    rewrite ^/(.*)$ $scheme://www.$host/$1 permanent;
  }

  # Redirect HTTP to HTTPS
  if ($scheme != "https") {
    return 301 https://$server_name$request_uri;
  }

  access_log /var/log/nginx/access.log;
  error_log /var/log/nginx/error.log;

  # SSL configuration
  #ssl_certificate_key /etc/nginx/ssl/key.key;
  #ssl_protocols TLSv1.2 TLSv1.3;

  # Enable HSTS
  add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

  # Enable OCSP Stapling
  #ssl_stapling on;
  #ssl_stapling_verify on;
  #ssl_trusted_certificate /etc/nginx/ssl/ca.crt;

  location / {
    proxy_pass http://odoo;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    # Increase the buffer size to handle large file uploads
    client_max_body_size 200m;
    proxy_connect_timeout 600;
    proxy_send_timeout 600;
    proxy_read_timeout 600;
    send_timeout 600;
    proxy_buffers 16 64k;
    proxy_buffer_size 128k;
  }

  # Static files
  location /web/static/ {
    proxy_cache_valid 200 60m;
    expires 864000;
    proxy_cache_bypass $http_pragma;
    proxy_cache_revalidate on;

    # Set cache key
    proxy_cache_key "$scheme$request_method$host$request_uri$is_args$args";

    # Set cache zone
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=static_cache:10m inactive=60m;
    proxy_cache_lock on;
    proxy_cache_use_stale error timeout invalid_header updating http_500 http_502 http_503 http_504;

    # Serve files from cache
    proxy_cache static_cache;
    proxy_pass http://odoo;
    proxy_redirect off;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    # Increase the buffer size to handle large file uploads
    client_max_body_size 200m;
    proxy_connect_timeout 600;
    proxy_send_timeout 600;
    proxy_read_timeout 600;
    send_timeout 600;
    proxy_buffers 16 64k;
    proxy_buffer_size 128k;
  }

  # Handle 404 errors
  error_page 404 /404.html;
  location = /404.html {
    root /usr/share/nginx/html;
  }

  # Handle 50x errors
  error_page 500 502 503 504 /50x.html;
  location = /50x.html {
    root /usr/share/nginx/html;
  }
}